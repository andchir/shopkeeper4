<div class="card">
    <div class="card-header">
        <span>{{ 'Reservation' | trans }}</span>
    </div>
    <div class="card-body">
    
        <div class="row">
            <div class="col-lg-6">
                <div class="mb-3 mb-lg-0">
                    <div class="input-group relative">
                        <input type="text" class="form-control" id="datetimepicker1" name="param__{{ fieldData.name }}[]" placeholder="{{ 'Start date' | trans }}">
                        <span class="input-group-append">
                            <span class="input-group-text">
                                <span class="icon-date_range"></span>
                            </span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div>
                    <div class="input-group relative">
                        <input type="text" class="form-control" id="datetimepicker2" name="param__{{ fieldData.name }}[]" placeholder="{{ 'End date' | trans }}">
                        <span class="input-group-append">
                            <span class="input-group-text">
                                <span class="icon-date_range"></span>
                            </span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        
        <script type="text/javascript">
            var reservedTime = [{% for d in data %}{% if loop.index0 > 0 %},{% endif %}{start: '{{ d.start }}', end: '{{ d.end }}'}{% endfor %}];
            window.addEventListener('load', function () {
                var datetimepickerOptions = {
                    icons: {
                        time: 'icon-watch',
                        date: 'icon-date_range',
                        up: 'icon-keyboard_arrow_up',
                        down: 'icon-keyboard_arrow_down',
                        previous: 'icon-keyboard_arrow_left',
                        next: 'icon-keyboard_arrow_right',
                        today: 'icon-date_range'
                    },
                    tooltips: {
                        selectTime: '{{ 'Select time' | trans }}',
                        selectDate: '{{ 'Select date' | trans }}'
                    }
                };
                jQuery('#datetimepicker1')
                    .datetimepicker(Object.assign({}, datetimepickerOptions, {
                        defaultDate: moment().add(1, 'hours').format('MM/DD/YYYY HH:mm')
                    }))
                    .on('dp.change', function (e) {
                        $('#datetimepicker2').data('DateTimePicker').minDate(e.date);
                        $('#datetimepicker1').data('DateTimePicker').disabledTimeIntervals(createDisabledHours(e.date, reservedTime));
                    });
                jQuery('#datetimepicker2')
                    .datetimepicker(Object.assign({}, datetimepickerOptions))
                    .on('dp.change', function (e) {
                        $('#datetimepicker1').data('DateTimePicker').maxDate(e.date);
                        $('#datetimepicker2').data('DateTimePicker').disabledTimeIntervals(createDisabledHours(e.date, reservedTime));
                    });
            });
            
            var createDisabledDates = function(dates) {
                dates = dates || [];
                var output = [];
                var a, b, diff;
                for (var i = 0; i < dates.length; i++) {
                    if (!dates[i] || (dates[i].start.indexOf('T') > -1 && dates[i].end.indexOf('T') > -1)) {
                        continue;
                    }
                    a = moment(dates[i].start);
                    b = moment(dates[i].end);
                    diff = b.diff(a, 'days');
                    if (diff > 1) {
                        output.push(a.toDate());
                        for (var j = 1; j < diff; j++) {
                            output.push(a.clone().add(j, 'days').toDate());
                        }
                    } else {
                        output.push(a.toDate())
                    }
                }
                return output;
            };
            
            var createDisabledHours = function(dateMoment, reservedTime) {
                reservedTime = reservedTime || [];
                var output = [];
                var a, b, diffA, diffB;
                for (var i = 0; i < reservedTime.length; i++) {
                    a = moment(reservedTime[i].start);
                    b = moment(reservedTime[i].end);
                    if (dateMoment.diff(a, 'days') === 0 && dateMoment.diff(b, 'days') === 0) {
                        output.push([a, b]);
                    }
                }
                return output;
            };
        </script>
    </div>
</div>
