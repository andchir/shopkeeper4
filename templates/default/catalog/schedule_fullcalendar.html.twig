{% block body -%}
    {% set fieldData = getField(fields, '', 'schedule') %}
    <div class="card">
        <div class="card-header">
            <span>{{ 'Reservation' | trans }}</span>
        </div>
        <div class="card-body">

            <input type="hidden" id="calendarStart" name="param__{{ fieldData['name'] }}[]">
            <input type="hidden" id="calendarEnd" name="param__{{ fieldData['name'] }}[]">
            <div id="calendar" class="min-height150 shopping-cart-loading"></div>

        </div>
    </div>
{% endblock %}

{% block stylesheets -%}
    <link href="{{ asset('node_modules/fullcalendar/main.css') }}" rel="stylesheet">
{% endblock %}

{% block javascripts -%}
    {% set fieldData = getField(fields, '', 'schedule') %}
    <script src="{{ asset('node_modules/fullcalendar/main.js') }}"></script>
    {% if app.request.locale != 'en' -%}
        <script src="{{ asset('node_modules/fullcalendar/locales/' ~ app.request.locale ~ '.js') }}"></script>
    {% endif -%}

    <script type="text/javascript">
        var calendar;
        var reservedTime = [
            {%- if currentPage[fieldData.name] is defined -%}
                {%- for d in currentPage[fieldData.name] -%}
                    {%- if loop.index0 > 0 %},{% endif -%}{
                        id: '{{ d.id }}',
                        title: '{{ 'Reserved' | trans }}',
                        start: '{{ d.start }}',
                        end: '{{ d.end }}'
                    }
                {%- endfor -%}
            {%- endif -%}
        ];
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                plugins: [],
                locale: '{{ app.request.locale }}',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: '{% if fieldData.outputProperties.headerToolbar_right is defined %}{{ fieldData.outputProperties.headerToolbar_right }}{% else %}dayGridMonth,timeGridWeek,timeGridDay{% endif %}'
                },
                iconClasses: {
                    close: 'icon-cross',
                    prev: 'icon-keyboard_arrow_left',
                    next: 'icon-keyboard_arrow_right',
                    prevYear: 'icon-arrow-left',
                    nextYear: 'icon-arrow-right'
                },
                initialView: '{{ fieldData.outputProperties.initialView | default('dayGridMonth') }}',
                defaultAllDayEventDuration: '{{ fieldData.outputProperties.defaultAllDayEventDuration | default('24:00:00') }}',
                defaultTimedEventDuration: '{{ fieldData.outputProperties.defaultTimedEventDuration | default('0:30:00') }}',
                slotMinTime: '{{ fieldData.outputProperties.slotMinTime | default('08:00:00') }}',
                slotMaxTime: '{{ fieldData.outputProperties.slotMaxTime | default('20:00:00') }}',
                slotDuration: '{{ fieldData.outputProperties.slotDuration | default('0:30:00') }}',
                initialDate: null,
                navLinks: {% if fieldData.outputProperties.navLinks %}true{% else %}false{% endif %},
                editable: false,
                selectable: true,
                dayMaxEvents: false,
                allDaySlot: {% if fieldData.outputProperties.allDaySlot %}true{% else %}false{% endif %},
                select: function(selectInfo) {
                    var calendarApi = selectInfo.view.calendar;
                    var events = calendarApi.getEvents();
                    var eventStartDay = selectInfo.start;
                    var eventEndDay = selectInfo.end;
                    
                    var currentEvents = events.filter((event) => {
                        if (eventStartDay > event.start && eventStartDay < event.end) {
                            return true;
                        }
                        if (eventEndDay > event.start && eventEndDay < event.end) {
                            return true;
                        }
                        return eventStartDay <= event.start && eventEndDay >= event.end;
                    });
                    if (currentEvents.length > 0) {
                        return;
                    }

                    if (confirm('{{ 'Are you sure you want to reserve this time?' | trans }}')) {
                        events.forEach(function(event) {
                            if (event.groupId === 'new') {
                                event.remove();
                            }
                        });

                        calendarApi.addEvent({
                            id: fullCalendarCreateId(),
                            groupId: 'new',
                            title: '{{ 'New booking' | trans }}',
                            start: selectInfo.startStr,
                            end: selectInfo.endStr,
                            allDay: selectInfo.allDay,
                            editable: true,
                            backgroundColor: '#32a852',
                            borderColor: '#1d8c3c',
                            overlap: false
                        });
                    }
                },
                eventClick: function(info) {
                    if (!info.event.startEditable) {
                        return;
                    }
                    if (confirm('{{ 'Cancel reservation?' | trans }}')) {
                        info.event.remove();
                    }
                },
                eventAdd: function(addInfo) {
                    fullCalendarOnEventChange(addInfo.event);
                },
                eventChange: function(changeInfo) {
                    fullCalendarOnEventChange(changeInfo.event);
                },
                events: reservedTime
            });
            calendar.render();
            calendarEl.classList.remove('shopping-cart-loading');
        });

        var fullCalendarOnEventChange = function(event) {
            document.getElementById('calendarStart').value = event.startStr;
            document.getElementById('calendarEnd').value = event.endStr;
        };

        var fullCalendarCreateId = function() {
            let lastId = 0;
            reservedTime.forEach((item) => {
                if (parseInt(item.id, 10) > lastId) {
                    lastId = parseInt(item.id, 10);
                }
            });
            return String(lastId + 1);
        }
    </script>
{% endblock %}
